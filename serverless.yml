service: aws-node-express-api-project
frameworkVersion: '3'

package:
  individually: true
custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude: ['aws-sdk']
    target: 'node14'
    define: { 'require.resolve': undefined }
    platform: 'node'
    concurrency: 10
    watch:
      pattern: ['src/**/*.ts'] # match only typescript files in src directory
      ignore: ['temp/**/*']
  userTableName: 'users-table-${sls:stage}'
  todoTableName: 'todos-table-${sls:stage}'
  dynamodb:
    stages:
      - dev
    start:
      inMemory: true
      port: 8000
      migrate: true

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-northeast-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    USERS_TABLE: ${self:custom.userTableName}
    TODOS_TABLE: ${self:custom.todoTableName}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    NODE_OPTIONS: '--enable-source-maps --stack-trace-limit=1000'

functions:
  app:
    handler: src/handler.handler
    events:
      - http:
          method: ANY
          path: "/"
          cors: true
      - http:
          method: ANY
          path: "/{any+}"
          cors: true

plugins:
  # - serverless-dotenv-plugin
  - serverless-esbuild
  # - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

resources: # CloudFormation template syntax
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.userTableName}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    TodosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.todoTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST